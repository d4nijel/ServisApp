// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServisApp.Data;

namespace ServisApp.Migrations
{
    [DbContext(typeof(MojContext))]
    [Migration("20200608130310_dodavanjeRequiredSlike")]
    partial class dodavanjeRequiredSlike
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ServisApp.Models.ClanServisa", b =>
                {
                    b.Property<int>("ClanServisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojMobitela")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("ClanServisaStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Zanimanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ClanServisaId");

                    b.ToTable("ClanoviServisa");
                });

            modelBuilder.Entity("ServisApp.Models.Dokument", b =>
                {
                    b.Property<int>("DokumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("date");

                    b.Property<string>("DokumentPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DokumentStatus")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<string>("SluzbeniList")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TipDokumenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("DokumentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Dokumenti");
                });

            modelBuilder.Entity("ServisApp.Models.Ispitivanje", b =>
                {
                    b.Property<int>("IspitivanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIspitivanja")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumNarednogIspitivanja")
                        .HasColumnType("date");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("NazivIspitivanjaId")
                        .HasColumnType("int");

                    b.Property<int>("RadniNalogId")
                        .HasColumnType("int");

                    b.Property<string>("TipIspitivanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IspitivanjeId");

                    b.HasIndex("NazivIspitivanjaId");

                    b.HasIndex("RadniNalogId");

                    b.ToTable("Ispitivanja");
                });

            modelBuilder.Entity("ServisApp.Models.Izvjestaj", b =>
                {
                    b.Property<int>("IzvjestajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojIzvjestaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("date");

                    b.Property<int>("IspitivanjeId")
                        .HasColumnType("int");

                    b.Property<string>("IzvjestajPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IzvjestajStatus")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("IzvjestajId");

                    b.HasIndex("BrojIzvjestaja")
                        .IsUnique();

                    b.HasIndex("IspitivanjeId")
                        .IsUnique();

                    b.HasIndex("KorisnikId");

                    b.ToTable("Izvjestaji");
                });

            modelBuilder.Entity("ServisApp.Models.Kanton", b =>
                {
                    b.Property<int>("KantonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SkraceniNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("KantonId");

                    b.HasIndex("Naziv")
                        .IsUnique();

                    b.HasIndex("SkraceniNaziv")
                        .IsUnique();

                    b.ToTable("Kantoni");
                });

            modelBuilder.Entity("ServisApp.Models.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("KlijentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("KontaktBrojFiksni")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KontaktBrojMobitel")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KontaktEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("KontaktOsoba")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("MjestoId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SkraceniNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("KlijentId");

                    b.HasIndex("IdBroj")
                        .IsUnique();

                    b.HasIndex("KontaktEmail")
                        .IsUnique();

                    b.HasIndex("MjestoId");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("ServisApp.Models.KlijentskiRacun", b =>
                {
                    b.Property<int>("KlijentskiRacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("BrojDanaPrijeIsteka")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("EmailNotifikacija")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("KlijentskiRacunSlika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("KlijentskiRacunStatus")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("KlijentskiRacunId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KlijentId")
                        .IsUnique();

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.ToTable("KlijentskiRacuni");
                });

            modelBuilder.Entity("ServisApp.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("KorisnikSlika")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("KorisnikStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("KorisnikId");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("ServisApp.Models.Mjesto", b =>
                {
                    b.Property<int>("MjestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("OpcinaId")
                        .HasColumnType("int");

                    b.HasKey("MjestoId");

                    b.HasIndex("OpcinaId");

                    b.ToTable("Mjesta");
                });

            modelBuilder.Entity("ServisApp.Models.NazivIspitivanja", b =>
                {
                    b.Property<int>("NazivIspitivanjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("NazivIspitivanjaStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Oznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("PeriodVazenja")
                        .HasColumnType("tinyint");

                    b.HasKey("NazivIspitivanjaId");

                    b.HasIndex("Oznaka")
                        .IsUnique();

                    b.ToTable("NaziviIspitivanja");
                });

            modelBuilder.Entity("ServisApp.Models.ObavljeniPosao", b =>
                {
                    b.Property<int>("ClanServisaId")
                        .HasColumnType("int");

                    b.Property<int>("RadniNalogId")
                        .HasColumnType("int");

                    b.HasKey("ClanServisaId", "RadniNalogId");

                    b.HasIndex("RadniNalogId");

                    b.ToTable("ObavljeniPoslovi");
                });

            modelBuilder.Entity("ServisApp.Models.Objekat", b =>
                {
                    b.Property<int>("ObjekatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("KontaktBrojFiksni")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KontaktBrojMobitel")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("KontaktEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("KontaktOsoba")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("MjestoId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("ObjekatStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ObjekatId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KontaktEmail")
                        .IsUnique();

                    b.HasIndex("MjestoId");

                    b.ToTable("Objekti");
                });

            modelBuilder.Entity("ServisApp.Models.Opcina", b =>
                {
                    b.Property<int>("OpcinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KantonId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("OpcinaId");

                    b.HasIndex("KantonId");

                    b.ToTable("Opcine");
                });

            modelBuilder.Entity("ServisApp.Models.Permisija", b =>
                {
                    b.Property<int>("PermisijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool>("PermisijaStatus")
                        .HasColumnType("bit");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("PermisijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Permisije");
                });

            modelBuilder.Entity("ServisApp.Models.Ponuda", b =>
                {
                    b.Property<int>("PonudaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojPonude")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumIzdavanja")
                        .HasColumnType("date");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("PonudaPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PonudaStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("UkupanIznosBezPdv")
                        .HasColumnType("money");

                    b.Property<decimal>("UkupanIznosSaPdv")
                        .HasColumnType("money");

                    b.HasKey("PonudaId");

                    b.HasIndex("BrojPonude")
                        .IsUnique();

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Ponude");
                });

            modelBuilder.Entity("ServisApp.Models.Poruka", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KlijentskiRacunId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("ZahtjevId")
                        .HasColumnType("int");

                    b.HasKey("PorukaId");

                    b.HasIndex("KlijentskiRacunId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ZahtjevId");

                    b.ToTable("Poruke");
                });

            modelBuilder.Entity("ServisApp.Models.RadniNalog", b =>
                {
                    b.Property<int>("RadniNalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojRadnogNaloga")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumPocetkaRadova")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumZavrsetkaRadova")
                        .HasColumnType("datetime2");

                    b.Property<int>("ObjekatId")
                        .HasColumnType("int");

                    b.Property<string>("RadniNalogPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RadniNalogId");

                    b.HasIndex("BrojRadnogNaloga")
                        .IsUnique();

                    b.HasIndex("ObjekatId");

                    b.ToTable("RadniNalozi");
                });

            modelBuilder.Entity("ServisApp.Models.Ugovor", b =>
                {
                    b.Property<int>("UgovorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojUgovora")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("date");

                    b.Property<DateTime>("DatumPotpisivanja")
                        .HasColumnType("date");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("UgovorPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UgovorStatus")
                        .HasColumnType("bit");

                    b.HasKey("UgovorId");

                    b.HasIndex("BrojUgovora")
                        .IsUnique();

                    b.HasIndex("KlijentId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Ugovori");
                });

            modelBuilder.Entity("ServisApp.Models.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UlogaId");

                    b.HasIndex("Naziv")
                        .IsUnique();

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("ServisApp.Models.Zahtjev", b =>
                {
                    b.Property<int>("ZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentskiRacunId")
                        .HasColumnType("int");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("ZahtjevKategorijaId")
                        .HasColumnType("int");

                    b.Property<int>("ZahtjevStatusId")
                        .HasColumnType("int");

                    b.HasKey("ZahtjevId");

                    b.HasIndex("KlijentskiRacunId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ZahtjevKategorijaId");

                    b.HasIndex("ZahtjevStatusId");

                    b.ToTable("Zahtjevi");
                });

            modelBuilder.Entity("ServisApp.Models.ZahtjevKategorija", b =>
                {
                    b.Property<int>("ZahtjevKategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ZahtjevKategorijaId");

                    b.ToTable("ZahtjeviKategorije");
                });

            modelBuilder.Entity("ServisApp.Models.ZahtjevStatus", b =>
                {
                    b.Property<int>("ZahtjevStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ZahtjevStatusId");

                    b.ToTable("ZahtjeviStatusi");
                });

            modelBuilder.Entity("ServisApp.Models.Dokument", b =>
                {
                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Dokumenti")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Ispitivanje", b =>
                {
                    b.HasOne("ServisApp.Models.NazivIspitivanja", "NazivIspitivanja")
                        .WithMany("Ispitivanja")
                        .HasForeignKey("NazivIspitivanjaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.RadniNalog", "RadniNalog")
                        .WithMany("Ispitivanja")
                        .HasForeignKey("RadniNalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Izvjestaj", b =>
                {
                    b.HasOne("ServisApp.Models.Ispitivanje", "Ispitivanje")
                        .WithOne("Izvjestaj")
                        .HasForeignKey("ServisApp.Models.Izvjestaj", "IspitivanjeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Izvjestaj")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Klijent", b =>
                {
                    b.HasOne("ServisApp.Models.Mjesto", "Mjesto")
                        .WithMany("Klijenti")
                        .HasForeignKey("MjestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.KlijentskiRacun", b =>
                {
                    b.HasOne("ServisApp.Models.Klijent", "Klijent")
                        .WithOne("KlijentskiRacun")
                        .HasForeignKey("ServisApp.Models.KlijentskiRacun", "KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Mjesto", b =>
                {
                    b.HasOne("ServisApp.Models.Opcina", "Opcina")
                        .WithMany("Mjesta")
                        .HasForeignKey("OpcinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.ObavljeniPosao", b =>
                {
                    b.HasOne("ServisApp.Models.ClanServisa", "ClanServisa")
                        .WithMany("ObavljeniPoslovi")
                        .HasForeignKey("ClanServisaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.RadniNalog", "RadniNalog")
                        .WithMany("ObavljeniPoslovi")
                        .HasForeignKey("RadniNalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Objekat", b =>
                {
                    b.HasOne("ServisApp.Models.Klijent", "Klijent")
                        .WithMany("Objekti")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Mjesto", "Mjesto")
                        .WithMany("Objekti")
                        .HasForeignKey("MjestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Opcina", b =>
                {
                    b.HasOne("ServisApp.Models.Kanton", "Kanton")
                        .WithMany("Opcine")
                        .HasForeignKey("KantonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Permisija", b =>
                {
                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Permisije")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Uloga", "Uloga")
                        .WithMany("Permisije")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Ponuda", b =>
                {
                    b.HasOne("ServisApp.Models.Klijent", "Klijent")
                        .WithMany("Ponuda")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Ponude")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Poruka", b =>
                {
                    b.HasOne("ServisApp.Models.KlijentskiRacun", "KlijentskiRacun")
                        .WithMany("Poruke")
                        .HasForeignKey("KlijentskiRacunId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ServisApp.Models.Korisnik", "Korisnici")
                        .WithMany("Poruke")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ServisApp.Models.Zahtjev", "Zahtjev")
                        .WithMany("Poruke")
                        .HasForeignKey("ZahtjevId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.RadniNalog", b =>
                {
                    b.HasOne("ServisApp.Models.Objekat", "Objekat")
                        .WithMany("RadniNalozi")
                        .HasForeignKey("ObjekatId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Ugovor", b =>
                {
                    b.HasOne("ServisApp.Models.Klijent", "Klijent")
                        .WithMany("Ugovori")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Ugovori")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ServisApp.Models.Zahtjev", b =>
                {
                    b.HasOne("ServisApp.Models.KlijentskiRacun", "KlijentskiRacun")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KlijentskiRacunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.Korisnik", "Korisnik")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ServisApp.Models.ZahtjevKategorija", "ZahtjevKategorija")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("ZahtjevKategorijaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServisApp.Models.ZahtjevStatus", "ZahtjevStatus")
                        .WithMany("Zahtjevi")
                        .HasForeignKey("ZahtjevStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
